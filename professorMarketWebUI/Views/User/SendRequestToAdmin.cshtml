@model professorMarketWebUI.Models.RequestForAdminModel

<script>
    function setDocuments(evt) {
        var files = evt.target.files;
        for (var i = 0, f; f = files[i]; i++) {
            if (!f.type.match('image.*')) {
                continue;
            }

            var reader = new FileReader();

            reader.onload = (function () {

                return function (e) {
                    var img = "<img style='max-width: 500px; height:autoж' src='" + e.target.result + "' />";
                    $("#documentContainer").append(img);
                };
            })(f);
            reader.readAsDataURL(f);
        }
    }

    window.onload = function () {
        var el = document.getElementById('documents');
        if (el) {
            el.addEventListener('change', setDocuments, false);
        }        
    }

    function sendAdminRequestSubmit() {
        if ($('#requestTbx').val() != "") {
            var res = $('#requestForAdminForm').serialize();
            $.ajax({
                type: 'POST',
                url: '/User/SendRequestToAdmin',
                data: res,
                success: function (data) {
                    if (data.success) {
                        $('#requestTbx').val('');
                        $('#sendAdminRequestSuc').removeClass('hidden');
                        setTimeout(function () { $('#sendAdminRequestSuc').addClass('hidden') }, 5000);                        
                    } else {
                        $('#text').val('');
                        $('#sendAdminRequestErr').removeClass('hidden');
                        setTimeout(function () { $('#sendAdminRequestErr').addClass('hidden') }, 5000);
                    }
                },
                error: function (xhr, str) {
                    $('#sendAdminRequestErr').removeClass('hidden');
                    setTimeout(function () { $('#sendAdminRequestErr').addClass('hidden') }, 5000);
                }
            });
        } else
        {
            $('#sendAdminRequestErr').removeClass('hidden');
            setTimeout(function () { $('#sendAdminRequestErr').addClass('hidden') }, 5000);
        }

    }
</script>
<div class="alert alert-success hidden" id="sendAdminRequestSuc" role="alert">
    Ваше обращение зарегестрировано!
</div>
<div class="alert alert-danger hidden" id="sendAdminRequestErr" role="alert">
    Пожалуйста, напишите название предмета!
</div>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "requestForAdminForm", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @if (Model.typeId == 1)
    {
        <h4>Добавить предмет</h4>
    }
    else
    {
        <h4>Подтвердить опыт и образование</h4>
    }
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.userId)
    @Html.HiddenFor(model => model.typeId)





    @if (Model.typeId != 4)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.text, new { htmlAttributes = new { @class = "form-control", @id = "requestTbx" } })
                @Html.ValidationMessageFor(model => model.text, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a class="btn btn-default" id="sendAdminRequestBtn" onclick="sendAdminRequestSubmit();">Отправить</a>
            </div>
        </div>
    }
    else
    {
        if (BLL.Data.TutorData.isRequestExist(Model.userId) == 1)
        {
            <div class="alert alert-warning">
                Ваша заявка на подтверждение опыта и образования обрабатывается, пожалуйста подождите.
            </div>
        }
        else
        {
        <div class="form-group">
            @Html.LabelFor(model => model.text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.text, new { htmlAttributes = new { @class = "form-control", @id = "requestTbx" } })
                @Html.ValidationMessageFor(model => model.text, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="documentContainer">

        </div>
        <hr />
        <div class="form-group">
            @Html.Label("documents", "Документы", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" multiple name="documents" id="documents" class="form-control" accept=".jpg,.png,.gif" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button class="btn btn-default" type="submit" id="sendAdminRequestBtnWithFiles">Отправить</button>
            </div>
        </div>
        }
    }
</div>
}

<div>
    @Html.ActionLink("На главную", "Index", "Home")
</div>

@model professorMarketWebUI.Models.TutorFinderModel
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

<script>
    function setFilter(group, id) {        
        
            switch(group)
            {
                case 'type': var res = {
                    selectedType: id
                };
                    $('#selectedTypeTbx').val(id);                    
                    break;
                case 'subjectType': var res = {
                    selectedSType: id
                };
                    $('#selectedSTypeTbx').val(id);
                    break;                
                case 'subject': var res = {
                    selectedSubject: id
                };
                    $('#selectedSubjectTbx').val(id);
                    break;
                default: alert('nobody wins');
        
        }        
        var str = JSON.stringify(res);       

        //$.ajax({
        //    type: 'POST',
        //    url: '/Student/ShowTutors',
        //    contentType: 'application/json; charset=utf-8',
        //    data: str,
        //    success: function (data) {
        //        alert('success');
        //        var $newBody = $($.parseHTML(data));
        //        $('body').prepend($('body', $newBody));               
        //    },
        //    error: function (xhr, str) {

        //    }
        //});
    }

    $(document).ready(function () {        
        $(document).on('click', '.dropdown-item', function () {
            var filterOption = $(this);
            setFilter(filterOption.data('groupName'), filterOption.data('itemId'));
        });
   
});
    
</script>



<div class="col-md-2 search_params">
    <h4>Условия поиска</h4>    
    <hr />

    @using (Html.BeginForm("ShowTutors", "Student"))
    {

        @Html.EditorFor(model => model.selectedType, new { htmlAttributes = new { @class = "hidden", @id = "selectedTypeTbx" } })
        @Html.EditorFor(model => model.selectedSType, new { htmlAttributes = new { @class = "hidden", @id = "selectedSTypeTbx" } })
        @Html.EditorFor(model => model.selectedSubject, new { htmlAttributes = new { @class = "hidden", @id = "selectedSubjectTbx" } })
        @Html.EditorFor(model => model.selectedType, new { htmlAttributes = new { @class = "hidden", @id = "selectedTypeTbx" } })

        <div class="btn-group select_type">
            <div class="label label-info">@(Model.selectedType == 0 ? "Не важно" : Model.types.Where(st => st.id == Model.selectedType).First().name)</div>
            <button class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Форма занятий <span class="glyphicon glyphicon-chevron-down"></span>
            </button>
            <ul class="dropdown-menu">
                <li><a href="javascript:void(0);" class="dropdown-item" data-group-name="type" data-item-id="0">Не важно</a></li>
                @foreach (var type in Model.types)
                {
                    <li><a href="javascript:void(0);" class="dropdown-item" data-group-name="type" data-item-id="@type.id">@type.name</a></li>
                }
            </ul>
        </div>


        <div class="btn-group select_experience">
            <div class="label label-info">@(Model.sectedExperience == 0 ? "Не важно" : Model.sectedExperience.ToString())</div>
            <button class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Опыт <span class="glyphicon glyphicon-chevron-down"></span>
            </button>
            <ul class="dropdown-menu">
                <li><a href="javascript:void(0);" class="dropdown-item">Не важно</a></li>
                <li><a href="javascript:void(0);" class="dropdown-item">Начинающий специалист</a></li>
                <li><a href="javascript:void(0);" class="dropdown-item">Небольшой опыт</a></li>
                <li><a href="javascript:void(0);" class="dropdown-item">Опытный специалист</a></li>
                <li><a href="javascript:void(0);" class="dropdown-item">Профессионал</a></li>
            </ul>
        </div>


        <div class="btn-group select_sType">
            <div class="label label-info">@(Model.selectedSType == 0 ? "Не важно" : Model.sTypes.Where(st => st.id == Model.selectedSType).First().name)</div>
            <button class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Группа предметов <span class="glyphicon glyphicon-chevron-down"></span>
            </button>
            <ul class="dropdown-menu">
                <li><a href="javascript:void(0);" class="dropdown-item" data-group-name="subjectType" data-item-id="0">Не важно</a></li>
                @foreach (var type in Model.sTypes)
                {
                    <li><a href="javascript:void(0);" class="dropdown-item" data-group-name="subjectType" data-item-id="@type.id">@type.name</a></li>

                }
            </ul>
        </div>


        <div class="btn-group select_subject">
            <div class="label label-info">@(Model.selectedSubject == 0 ? "Не важно" : Model.subjects.Where(s => s.id == Model.selectedSubject).First().name)</div>
            <button class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Предмет <span class="glyphicon glyphicon-chevron-down"></span>
            </button>
            <ul class="dropdown-menu">
                <li><a href="javascript:void(0);" class="dropdown-item" data-group-name="subject" data-item-id="0">Не важно</a></li>
                @foreach (var s in Model.subjects)
                {
                    <li><a href="javascript:void(0);" class="dropdown-item" data-group-name="subject" data-item-id="@s.id">@s.name</a></li>

                }
            </ul>
        </div>


        <button type="submit" class="btn btn-success" id="submit_btn">Применить</button>

    }







</div>

<div class="col-md-9 col-md-offset-1">

    @foreach (var tutor in Model.Tutors)
    {
        Html.RenderPartial("ShowTutor", tutor);
    }
</div>

